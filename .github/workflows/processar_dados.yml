name: Processar Dados

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  EMAIL: ${{ vars.EMAIL_VAR }}  # Nome da variável no repositório
  NOME: ${{ vars.NOME }}        # Deve corresponder ao nome definido em "Variables"

jobs:
  processar:
    runs-on: ubuntu-latest
    permissions:  # Permissões para o GITHUB_TOKEN poder fazer push
      contents: write

    steps:
      # Passo 1: Baixar o código do repositório
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necessário para o git push funcionar

      # Passo 2: Configurar Python
      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Passo 3: Instalar dependências (ex: pandas)
      - name: Instalar dependências
        run: pip install pandas

      # Passo 4: Executar o script Python
      - name: Executar script
        run: python dados/script.py

      # Passo 5 (Opcional): Verificar se o arquivo foi gerado
      - name: Verificar saída
        run: |
          ls -la resultados/
          cat resultados/saida.csv

      # Passo 6: Commit do arquivo gerado
      - name: Commit do arquivo gerado
        run: |
          git config --global user.email "${{ vars.EMAIL_VAR }}"
          git config --global user.name "${{ vars.NOME }}"
          git add resultados/saida.csv
          git commit -m "Atualiza arquivo de saída"
          git push origin HEAD:develop